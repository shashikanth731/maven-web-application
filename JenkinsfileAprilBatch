

node('nodes'){
    
def mavenHome = tool name: "maven3.8.4"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "Job name is: ${env.JOB_NAME}"
echo "Node_name is: ${env.NODE_NAME}"
echo "Build number is: ${env.BUILD_NUMBER}"


try{

sendSlackNotifications('STARTED')

stage('CheckoutCode')
{
git branch: 'development', credentialsId: 'c4f0d576-78e2-4e85-9268-7cb1c07ec0a7', url: 'https://github.com/shashikanth731/maven-web-application.git'
}

stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}



}
/*
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAppIntoTomcatServer')
{
sshagent(['4ace188a-e24a-435e-8eb4-c7d1d5f84b51']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.215.174:/opt/apache-tomcat-9.0.63/webapps"
}
stage('TriggerDownstreamJob'){
build job: 'pipelinescriptwithbuildparameters'
}
}
*/
}catch(e){
currentBuild.result = "FAILED"
    throw e  
}    
finally{
sendSlackNotifications(currentBuild.result)
}

}//Node Closing

//Below code will use for sent the slack notifications  

def sendSlackNotifications(StringbuildStatus = 'STARTED') {

  buildStatus = buildStatus ?: 'SUCCESS' 
  
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: facebook')
}
